name: Create Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  workflow_dispatch:


jobs:

  build:
    name: Build Applications

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macOS-latest, windows-latest]

    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: ioroot/APS
          token: ${{ secrets.PAT }}


      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x


      - name: npm install
        run: |
          npm install


      - name: Publish
        run: |
          npm run build


      - name: Cleanup artifacts
        if: matrix.os != 'windows-latest'
        run: |
          npx rimraf "dist/!(*.exe|*.deb|*.AppImage|*.dmg)"
          mv dist artifacts


      - name: Cleanup artifacts Win
        if: matrix.os == 'windows-latest'
        run: |
          mkdir artifacts
          mv dist/*.exe artifacts


      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}
          path: artifacts



  release:

    name: Build Release
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: ioroot/APS
          token: ${{ secrets.PAT }}


      - uses: actions/download-artifact@master
        id: download


      - name: Artifacts
        run: |
          mkdir artifacts
          mv macOS-latest artifacts/
          mv windows-latest artifacts/


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: RELEASE.md
          draft: false
          prerelease: false


      # - name: Upload artifact and release
      #   uses: nanoufo/action-upload-artifacts-and-release-assets@main
      #   with:
      #     path: |
      #       artifacts/*
      #     upload-release-files: true
      #     if-no-files-found: error
      #     release-upload-url: ${{ steps.create_release.outputs.upload_url }} 
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Upload artifact and release v2
        uses: fnkr/github-action-ghr@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GHR_DELETE: true
          GHR_PATH: artifacts/*
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}